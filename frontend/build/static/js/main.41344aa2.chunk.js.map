{"version":3,"sources":["components/SingleChat.js","Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","reportWebVitals.js","index.js"],"names":["socket","selectedChatCompare","ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","fetchAgain","setFetchAgain","_useState9","_useState10","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","handleLogout","removeItem","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","guestLoading","setGuestLoading","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","console","log","t0","description","response","message","stop","apply","arguments","handleGuestLogin","_ref2","_callee2","_yield$Promise$allSet","_yield$Promise$allSet2","emailResult","passwordResult","_yield$axios$post2","_context2","Promise","allSettled","Error","_jsxs","VStack","gap","FormControl","id","isRequired","FormLabel","InputGroup","Input","type","placeholder","onChange","e","target","autoComplete","size","InputRightElement","width","px","Icon","as","ViewIcon","ViewOffIcon","h","onClick","_hover","opacity","cursor","FormHelperText","textAlign","Text","color","Button","colorScheme","style","marginTop","isLoading","variant","Signup","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","name","setName","confirmpassword","setConfirmpassword","_useState11","_useState12","_useState13","_useState14","pic","setPic","_useState15","_useState16","picLoading","setPicLoading","spacing","p","accept","files","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","colors","Homepage","tabIndex","setTabIndex","_Fragment","Container","maxW","centerContent","Box","d","justifyContent","alignItems","w","m","Heading","letterSpacing","bgGradient","bgClip","bg","borderWidth","borderRadius","fontFamily","boxShadow","Tabs","isFitted","index","TabList","mb","Tab","transition","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","IconButton","base","icon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","fontSize","ModalCloseButton","ModalBody","flexDir","Image","boxSize","src","alt","md","ModalFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","background","py","maxWidth","ml","content","UserBadgeItem","handleFunction","admin","Badge","CloseIcon","pl","UserListItem","UpdateGroupChatModal","fetchMessages","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","query","_yield$axios$get","Authorization","concat","token","get","_x","handleRename","_ref3","_yield$axios$put","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","Spinner","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","room","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","marginLeft","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Stack","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","ChevronDownIcon","MenuDivider","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","App","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","primary","main","secondary","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.41344aa2.chunk.js","sourcesContent":["import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"https://chit-chat-taq0.onrender.com\";\nvar socket, selectedChatCompare;\n\nconst SingleChat = () => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    fetchAgain,\n    setFetchAgain,\n  } = ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n        setFetchAgain(!fetchAgain);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", (room) => {\n      if (selectedChatCompare._id !== room) {\n        return;\n      }\n      setIsTyping(true);\n    });\n    socket.on(\"stop typing\", (room) => {\n      if (selectedChatCompare._id !== room) {\n        return;\n      }\n      setIsTyping(false);\n    });\n  }, []);\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n        setFetchAgain(!fetchAgain);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [user, setUser] = useState(null);\n  const [notification, setNotification] = useState([]);\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const [chats, setChats] = useState(null);\n\n  const history = useHistory();\n  const handleLogout = () => {\n    localStorage.removeItem(\"userInfo\");\n    setUser(null);\n    setChats([]);\n    setSelectedChat(null);\n    setFetchAgain(false);\n    history.push(\"/\");\n  };\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    if (!userInfo) history.push(\"/\");\n    setUser(userInfo);\n  }, [history, setUser]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        user,\n        setUser,\n        selectedChat,\n        setSelectedChat,\n        chats,\n        setChats,\n        fetchAgain,\n        setFetchAgain,\n        notification,\n        setNotification,\n        handleLogout,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Button } from \"@chakra-ui/button\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { Icon, useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormHelperText, Text } from \"@chakra-ui/react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [guestLoading, setGuestLoading] = useState(false);\n\n  const history = useHistory();\n  const { setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setLoading(true);\n\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    // console.log(email, password);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      console.log(data);\n      setUser(data);\n      history.push(\"/chats\");\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleGuestLogin = async () => {\n    setGuestLoading(true);\n    try {\n      const [emailResult, passwordResult] = await Promise.allSettled([\n        setEmail(\"guest@chit-chat.com\"),\n        setPassword(\"1234567\"),\n      ]);\n      if (\n        emailResult.status === \"rejected\" ||\n        passwordResult.status === \"rejected\"\n      ) {\n        throw new Error(\"Failed to set email or password\");\n      }\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email: \"guest@chit-chat.com\", password: \"1234567\" },\n        config\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setGuestLoading(false);\n      console.log(data);\n      setUser(data);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setGuestLoading(false);\n    }\n  };\n\n  return (\n    <VStack gap=\".3rem\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <InputGroup>\n          <Input\n            type=\"email\"\n            placeholder=\"Enter Email Address\"\n            onChange={(e) => setEmail(e.target.value)}\n            autoComplete=\"true\"\n            value={email}\n            isRequired\n          />\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            autoComplete=\"true\"\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"3rem\" px=\"4px\">\n            <Icon\n              as={show ? ViewIcon : ViewOffIcon}\n              h=\"1.75rem\"\n              size=\"sm\"\n              onClick={handleClick}\n              _hover={{\n                opacity: 0.9,\n                cursor: \"pointer\",\n              }}\n            />\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl>\n        <FormHelperText textAlign=\"left\">\n          <Text color=\"red.300\">* Required</Text>\n        </FormHelperText>\n      </FormControl>\n      <Button\n        colorScheme=\"primary\"\n        width=\"100%\"\n        style={{ marginTop: 20 }}\n        isLoading={loading}\n        onClick={submitHandler}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"secondary\"\n        width=\"100%\"\n        onClick={handleGuestLogin}\n        isLoading={guestLoading}\n      >\n        Login as Guest\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Icon, ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\nimport { FormHelperText, Text } from \"@chakra-ui/react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nconst Signup = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const toast = useToast();\n  const history = useHistory();\n  const { setUser } = ChatState();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n  const handleShowConfirmpassword = () =>\n    setShowConfirmPassword(!showConfirmPassword);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      setUser(data);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"vishalaneja\");\n      fetch(\"https://api.cloudinary.com/v1_1/vishalaneja/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter Name\"\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          isRequired\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={showPassword ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            autoComplete=\"false\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          />\n          <InputRightElement width=\"3rem\" px=\"4px\">\n            <Icon\n              as={showPassword ? ViewIcon : ViewOffIcon}\n              h=\"1.75rem\"\n              size=\"sm\"\n              onClick={handleShowPassword}\n              _hover={{\n                opacity: 0.9,\n                cursor: \"pointer\",\n              }}\n            />\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={showConfirmPassword ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n            value={confirmpassword}\n          />\n          <InputRightElement width=\"3rem\" px=\"4px\">\n            <Icon\n              as={showConfirmPassword ? ViewIcon : ViewOffIcon}\n              h=\"1.75rem\"\n              size=\"sm\"\n              onClick={handleShowConfirmpassword}\n              _hover={{\n                opacity: 0.9,\n                cursor: \"pointer\",\n              }}\n            />\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1}\n          accept=\"image/*\"\n          files={pic}\n          onChange={(e) => postDetails(e.target.files[0])}\n          _hover={{ cursor: \"pointer\" }}\n        />\n      </FormControl>\n      <FormControl>\n        <FormHelperText textAlign={\"left\"}>\n          <Text color=\"red.300\">* Required</Text>\n        </FormHelperText>\n      </FormControl>\n      <Button\n        colorScheme=\"red\"\n        width=\"100%\"\n        style={{ marginTop: 20 }}\n        isLoading={picLoading}\n        onClick={submitHandler}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Heading,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nconst colors = [\"blue\", \"red\"];\nconst Homepage = () => {\n  const [tabIndex, setTabIndex] = useState(0);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    if (userInfo) {\n      history.push(\"/chats\");\n    }\n  }, [history]);\n\n  return (\n    <>\n      {!JSON.parse(localStorage.getItem(\"userInfo\")) ? (\n        <>\n          <Container maxW=\"xl\" centerContent>\n            <Box\n              d=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              p={3}\n              w=\"100%\"\n              m=\"20px 0 15px 0\"\n            >\n              <Heading\n                as=\"h1\"\n                size=\"2xl\"\n                letterSpacing=\"tight\"\n                textAlign=\"center\"\n                bgGradient=\"linear(to-r, #0088FF, #FFA500)\"\n                bgClip=\"text\"\n              >\n                <Box as=\"span\" color=\"#41beb0\">\n                  Chit\n                </Box>\n                -\n                <Box as=\"span\" color=\"#FFBE08\">\n                  Chat\n                </Box>\n              </Heading>\n            </Box>\n            <Box\n              bg=\"white\"\n              w=\"100%\"\n              p={4}\n              borderWidth=\"thin\"\n              borderRadius=\"lg\"\n              fontFamily=\"Work Sans\"\n              boxShadow=\"xl\"\n            >\n              <Tabs\n                isFitted\n                variant=\"line\"\n                onChange={(index) => setTabIndex(index)}\n                colorScheme={colors[tabIndex]}\n              >\n                <TabList mb=\".5rem\">\n                  <Tab borderRadius=\"6px 6px 0 0\" transition=\"all .2s ease\">\n                    Login\n                  </Tab>\n                  <Tab borderRadius=\"6px 6px 0 0\" transition=\"all .2s ease\">\n                    Sign Up\n                  </Tab>\n                </TabList>\n                <TabPanels>\n                  <TabPanel>\n                    <Login />\n                  </TabPanel>\n                  <TabPanel>\n                    <Signup />\n                  </TabPanel>\n                </TabPanels>\n              </Tabs>\n            </Box>\n          </Container>\n        </>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default Homepage;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  console.log(loggedUser, users);\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { Box } from \"@chakra-ui/react\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <Box\n              background={\n                m.sender._id === user._id\n                  ? \"linear-gradient(60deg, yellow, #FFA500);\"\n                  : \"linear-gradient(120deg, #41beb0, cyan);\"\n              }\n              py=\"1.5\"\n              px={4}\n              borderRadius=\"xl\"\n              maxWidth=\"75%\"\n              ml={isSameSenderMargin(messages, m, i, user._id)}\n              mt={isSameUser(messages, m, i) ? 1 : 5}\n              mr={1}\n            >\n              {m.content}\n            </Box>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n\nconst UserListItem = ({ user, handleFunction }) => {\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = () => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState(\"\");\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = () => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { user, selectedChat, setSelectedChat, chats, setChats, fetchAgain } =\n    ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#41beb0\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { Heading } from \"@chakra-ui/react\";\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n    handleLogout,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Heading\n          as=\"h1\"\n          size=\"2xl\"\n          letterSpacing=\"tight\"\n          textAlign=\"center\"\n          bgGradient=\"linear(to-r, #0088FF, #FFA500)\"\n          bgClip=\"text\"\n        >\n          <Box as=\"span\" color=\"#41beb0\">\n            Chit\n          </Box>\n          -\n          <Box as=\"span\" color=\"#FFBE08\">\n            Chat\n          </Box>\n        </Heading>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(\n                      notification.filter((n) => n.chat._id !== notif.chat._id)\n                    );\n                  }}\n                >\n                  {notif.chat.isGroupChat ? (\n                    <span>\n                      New Message in{\" \"}\n                      <b>\n                        <i>{notif.chat.chatName}</i>\n                      </b>\n                    </span>\n                  ) : (\n                    <span>\n                      New Message from{\" \"}\n                      <b>\n                        <i>{getSender(user, notif.chat.users)}</i>\n                      </b>\n                    </span>\n                  )}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={handleLogout}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const { user } = ChatState();\n  console.log(user);\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats />}\n        {user && <Chatbox />}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\nconst theme = extendTheme({\n  colors: {\n    primary: {\n      main: \"#41beb0\",\n      50: \"#41beb0\",\n      100: \"#41beb0\",\n      200: \"#41beb0\",\n      300: \"#41beb0\",\n      400: \"#41beb0\",\n      500: \"#41beb0\",\n      600: \"#41beb0\",\n      700: \"#41beb0\",\n      800: \"#41beb0\",\n      900: \"#41beb0\",\n    },\n\n    secondary: {\n      main: \"#FFA500\",\n      50: \"#FFA500\",\n      100: \"#FFA500\",\n      200: \"#FFA500\",\n      300: \"#FFA500\",\n      400: \"#FFA500\",\n      500: \"#FFA500\",\n      600: \"#FFA500\",\n      700: \"#FFA500\",\n      800: \"#FFA500\",\n      900: \"#FFA500\",\n    },\n  },\n});\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}